import Char
import Maybe

-- takeWhile : (a -> (Bool, a)) -> VecX a -> (VecX a, VecX a)

parseInt : String -> (Maybe Int, String)
parseInt str = case stringUnsnoc str of
  None -> (None, ""); -- fail on empty string
  Some (init,c) -> parseIntInner (stringSnoc init c)

parseIntInner : String -> (Maybe Int, String)
parseIntInner str = case stringUnsnoc str of
  None -> (0, "");
  Some (str,c) -> case digitToInt c of
    Left c -> (None, stringSnoc str c);
    Right n -> case parseIntInner str of


  parseIntInner init c


  case [digitToInt [c]] of
    [None] -> None;
    [Some n] -> case parseInt [init] of
      None -> None;
      Some m -> Some (n + (m * 10))

parseInt : String [0..1] -> Maybe Int
parseInt [str] = case [stringUnsnoc str] of
  [None] -> Some 0;
  [Some (init,c)] -> case [digitToInt [c]] of
    [None] -> None;
    [Some n] -> case parseInt [init] of
      None -> None;
      Some m -> Some (n + (m * 10))

-- main : Maybe Int
-- main = parseInt ["123456"]