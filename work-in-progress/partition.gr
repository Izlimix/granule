-- last checked 2019-04-07 by @buggymcbugfix

partition
  : ∀ {a : Type, n_F : Nat, n_T : Nat}
  . (a -> Bool × a) [n_F + n_T]
  -> Vec (n_F + n_T) a
  -> Vec n_F a × Vec n_T a
partition [_] Nil = (Nil, Nil);
partition [p] (Cons x xs) =
  let (xs_F, xs_T) = partition [p] xs in
  let (b, x) = p x in
  if b
  then (xs_F, Cons x xs_T)
  else (Cons x xs_F, xs_T)
