data Vec (n : Nat) t where
    Nil  : Vec 0 t;
    Cons : t -> Vec n t -> Vec (n+1) t

data N (n : Nat) where
  Z : N 0;
  S : N n -> N (n+1)

-- Implicit kinds inferred
leng : forall t n. Vec n (n [0]) -> N t
leng Nil = Z;
leng (Cons [_] xs) = S (leng xs)