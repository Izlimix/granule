-- EXPECTED: S S S Z

interface Semigroup a where
  op : a -> a -> a

data NatPlus = Z | S NatPlus

instance Semigroup NatPlus where
  op Z x = x;
  op (S n) x = S (op n x)

-- 'plus' has an interface constraint, the rewriter should
-- be able to pass in a general proof term that 'a' is a Semigroup
-- to 'op'
plus : forall {a : Type} . {Semigroup a} => a -> a -> a
plus = op

main : NatPlus
main = plus (S Z) (S (S Z))
