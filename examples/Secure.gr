-- The following is not typeable:
-- leak : Int [Private] -> Int [Public]
-- leak [x] = [x]

notALeak : (Int [Private]) [0] -> Int [Public]
notALeak [x] = [0]

secret Private: Int
secret = 1234

hash : Int -> Int
hash x = x*535

-- If `main` was of type `Int [Public]`, this wouldn't type check, i.e. the secret
-- can't be used in a Public security environment.
main : Int [Public]
main = [hash secret]

-- Flattening takes the meet (`\/`) of both Levels (see example below).
flatten : forall k : Level, l : Level . (Int [k]) [l] -> Int [k \/ l]
flatten [[x]] = [x]

xbb : (Int [Public]) [Private]
xbb = [[1337]]

xb : Int [Private]
xb = flatten xbb
